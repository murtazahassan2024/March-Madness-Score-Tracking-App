// Generated by view binder compiler. Do not edit!
package com.depauw.buckettracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.depauw.buckettracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAddScore;

  @NonNull
  public final Button buttonSetTime;

  @NonNull
  public final CheckBox checkboxAddOne;

  @NonNull
  public final CheckBox checkboxAddThree;

  @NonNull
  public final CheckBox checkboxAddTwo;

  @NonNull
  public final View divider;

  @NonNull
  public final EditText edittextNumMins;

  @NonNull
  public final EditText edittextNumSecs;

  @NonNull
  public final TextView labelGuest;

  @NonNull
  public final TextView labelHome;

  @NonNull
  public final TextView labelMin;

  @NonNull
  public final TextView labelSec;

  @NonNull
  public final Switch switchGameClock;

  @NonNull
  public final TextView textviewGuestScore;

  @NonNull
  public final TextView textviewHomeScore;

  @NonNull
  public final TextView textviewTimeRemaining;

  @NonNull
  public final ToggleButton toggleIsGuest;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonAddScore,
      @NonNull Button buttonSetTime, @NonNull CheckBox checkboxAddOne,
      @NonNull CheckBox checkboxAddThree, @NonNull CheckBox checkboxAddTwo, @NonNull View divider,
      @NonNull EditText edittextNumMins, @NonNull EditText edittextNumSecs,
      @NonNull TextView labelGuest, @NonNull TextView labelHome, @NonNull TextView labelMin,
      @NonNull TextView labelSec, @NonNull Switch switchGameClock,
      @NonNull TextView textviewGuestScore, @NonNull TextView textviewHomeScore,
      @NonNull TextView textviewTimeRemaining, @NonNull ToggleButton toggleIsGuest) {
    this.rootView = rootView;
    this.buttonAddScore = buttonAddScore;
    this.buttonSetTime = buttonSetTime;
    this.checkboxAddOne = checkboxAddOne;
    this.checkboxAddThree = checkboxAddThree;
    this.checkboxAddTwo = checkboxAddTwo;
    this.divider = divider;
    this.edittextNumMins = edittextNumMins;
    this.edittextNumSecs = edittextNumSecs;
    this.labelGuest = labelGuest;
    this.labelHome = labelHome;
    this.labelMin = labelMin;
    this.labelSec = labelSec;
    this.switchGameClock = switchGameClock;
    this.textviewGuestScore = textviewGuestScore;
    this.textviewHomeScore = textviewHomeScore;
    this.textviewTimeRemaining = textviewTimeRemaining;
    this.toggleIsGuest = toggleIsGuest;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_add_score;
      Button buttonAddScore = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddScore == null) {
        break missingId;
      }

      id = R.id.button_set_time;
      Button buttonSetTime = ViewBindings.findChildViewById(rootView, id);
      if (buttonSetTime == null) {
        break missingId;
      }

      id = R.id.checkbox_add_one;
      CheckBox checkboxAddOne = ViewBindings.findChildViewById(rootView, id);
      if (checkboxAddOne == null) {
        break missingId;
      }

      id = R.id.checkbox_add_three;
      CheckBox checkboxAddThree = ViewBindings.findChildViewById(rootView, id);
      if (checkboxAddThree == null) {
        break missingId;
      }

      id = R.id.checkbox_add_two;
      CheckBox checkboxAddTwo = ViewBindings.findChildViewById(rootView, id);
      if (checkboxAddTwo == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.edittext_num_mins;
      EditText edittextNumMins = ViewBindings.findChildViewById(rootView, id);
      if (edittextNumMins == null) {
        break missingId;
      }

      id = R.id.edittext_num_secs;
      EditText edittextNumSecs = ViewBindings.findChildViewById(rootView, id);
      if (edittextNumSecs == null) {
        break missingId;
      }

      id = R.id.label_guest;
      TextView labelGuest = ViewBindings.findChildViewById(rootView, id);
      if (labelGuest == null) {
        break missingId;
      }

      id = R.id.label_home;
      TextView labelHome = ViewBindings.findChildViewById(rootView, id);
      if (labelHome == null) {
        break missingId;
      }

      id = R.id.label_min;
      TextView labelMin = ViewBindings.findChildViewById(rootView, id);
      if (labelMin == null) {
        break missingId;
      }

      id = R.id.label_sec;
      TextView labelSec = ViewBindings.findChildViewById(rootView, id);
      if (labelSec == null) {
        break missingId;
      }

      id = R.id.switch_game_clock;
      Switch switchGameClock = ViewBindings.findChildViewById(rootView, id);
      if (switchGameClock == null) {
        break missingId;
      }

      id = R.id.textview_guest_score;
      TextView textviewGuestScore = ViewBindings.findChildViewById(rootView, id);
      if (textviewGuestScore == null) {
        break missingId;
      }

      id = R.id.textview_home_score;
      TextView textviewHomeScore = ViewBindings.findChildViewById(rootView, id);
      if (textviewHomeScore == null) {
        break missingId;
      }

      id = R.id.textview_time_remaining;
      TextView textviewTimeRemaining = ViewBindings.findChildViewById(rootView, id);
      if (textviewTimeRemaining == null) {
        break missingId;
      }

      id = R.id.toggle_is_guest;
      ToggleButton toggleIsGuest = ViewBindings.findChildViewById(rootView, id);
      if (toggleIsGuest == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, buttonAddScore, buttonSetTime,
          checkboxAddOne, checkboxAddThree, checkboxAddTwo, divider, edittextNumMins,
          edittextNumSecs, labelGuest, labelHome, labelMin, labelSec, switchGameClock,
          textviewGuestScore, textviewHomeScore, textviewTimeRemaining, toggleIsGuest);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
